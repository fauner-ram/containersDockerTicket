pipeline {
    agent any
    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/fauner-ram/containersDockerTicket.git'
            }
        }
        stage('Build Frontend Docker Image') {
            steps {
                dir('frontend') {
                    script {
                        sh 'docker build -t frontend-test .'
                    }
                }
            }
        }
        stage('Run Frontend Tests') {
            steps {
                dir('frontend') {
                    script {
                        // Crear el directorio coverage antes de correr los tests
                        sh 'mkdir -p coverage'
                        // Ejecutar los tests y luego listar el contenido dentro del contenedor
                        sh 'docker run --rm -v $PWD/coverage:/app/coverage frontend-test /bin/sh -c "export CHROME_BIN=/usr/bin/chromium && node --max-old-space-size=1024 ./node_modules/@angular/cli/bin/ng test --watch=false --browsers=ChromeHeadlessNoSandbox && ls -l /app && ls -l /app/coverage"'
                    }
                }
            }
        }
        stage('Upload Coverage to Codecov') {
            steps {
                dir('frontend') {
                    script {
                        sh 'ls -l coverage || true' // Debug: mostrar contenido de coverage
                        sh 'cat coverage/lcov.info || echo "lcov.info no existe"' // Mostrar contenido del archivo
                        sh 'curl -Os https://uploader.codecov.io/latest/linux/codecov'
                        sh 'chmod +x codecov'
                        sh './codecov -f coverage/lcov.info'
                    }
                }
            }
            post {
                always {
                    dir('frontend') {
                        script {
                            sh 'ls -l coverage || true' // Siempre mostrar contenido para debug
                        }
                    }
                }
            }
        }
    }
}